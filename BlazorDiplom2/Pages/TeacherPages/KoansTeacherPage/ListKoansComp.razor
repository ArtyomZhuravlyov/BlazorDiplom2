@using Microsoft.EntityFrameworkCore
@inject DB _db;


@if (isLoaded)
{
    @if (showList)
    {
        @if (koans != null)
        {
            @foreach (var item in koans)
            {

                <div class="element">
                    <div class="element_item">
                        <div class="element_item_title">
                            <img src="img\description.png" alt=""> Название
                        </div>
                        <div class="element_item_info">
                            @item.Name
                        </div>
                    </div>
                    <div class="edit_delete">
                        <div class="edit_delete_item" @onclick="(()=>OpenChanged(item))"><img src="img\edit.png" alt=""></div>
                        <div class="edit_delete_item" @onclick="(()=>Delete(item))"><img src="img\delete.png" alt=""></div>
                    </div>
                </div>
            }
        }
        else
        {
            <div> Loading   </div>
        }
    }
    else
    {
        <CreateEditKoan ShowList="ShowList" Koan="editKoan" Teacher="thisTeacher"></CreateEditKoan>
    }
}


@code {
    IEnumerable<Koan> koans;
    Koan editKoan;
    bool showList = true;
    Teacher thisTeacher;
    bool isLoaded;



    protected override async Task OnInitializedAsync()
    {
        //var authstate = await GetAuthenticationStateAsync.GetAuthenticationStateAsync();
        //var user = authstate.User;
        //var aspUser = await _userManager.GetUserAsync(user);
        //thisTeacher = _db.Teachers.Include(x => x.AspNetUser).Include(x=>x.Koans).First(x => x.AspNetUser == aspUser);
        thisTeacher = await Task.FromResult(_db.Teachers.Include(x => x.AspNetUser).Include(x => x.Koans).First(x => x.AspNetUser == CurrentUser.User));
        koans = thisTeacher.Koans;
        isLoaded = true;
    }

    private void Delete(Koan delKoan)
    {
        thisTeacher.Koans.Remove(delKoan);
        //_db.Koans.Remove(delKoan);//если нет каскадного удаления и проверить для модуля

        _db.SaveChanges();
    }

    private void ShowList()
    {
        showList = true;
    }

    private void OpenChanged(Koan eKoan)
    {
        editKoan = eKoan;
        showList = false;

    }


}
