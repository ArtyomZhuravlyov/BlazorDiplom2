@inject DB _db;

@if (edit)
{
    <button @onclick="ShowList">Назад</button>
}

<EditForm class="new block" Model="EducationalInstitution" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <div class="item">
        <div class="main_name">Полное название</div>
        <InputText @bind-Value="EducationalInstitution.FullName"></InputText>
    </div>
    <div class="item">
        <div class="main_name">Сокращённое название</div>
         <InputText @bind-Value="EducationalInstitution.ShortName"></InputText>
    </div>   
    <button class="save_btn">@messageBtn</button>
</EditForm>
@code {

    [Parameter] public EducationalInstitution EducationalInstitution { get; set; }

    [Parameter] public EventCallback ShowList { get; set; }

    private bool edit;

    private string messageBtn;

    protected override void OnInitialized()
    {
        edit = EducationalInstitution.Id != 0;
        messageBtn = edit ? Constants.BTN_CHANGE : Constants.BTN_ADD;
    }

    private void OnValidSubmit()
    {
        //if (edit) //если изменяем
        //{
        //    var changeE = _db.EducationalInstitutions.First(x => x.Id.Equals(EducationalInstitution.Id));
        //    changeE.FullName = EducationalInstitution.FullName;
        //    changeE.ShortName = EducationalInstitution.ShortName;
        //}
        //else //если добавляем
        //{
        //    _db.EducationalInstitutions.Add(EducationalInstitution);

        //}
        if(!edit)
            _db.EducationalInstitutions.Add(EducationalInstitution);
        _db.SaveChanges();
        EducationalInstitution = new();
    }

    //  [Parameter] public EventCallback<TeacherModelForm> AddTeacher { get; set; }
}
