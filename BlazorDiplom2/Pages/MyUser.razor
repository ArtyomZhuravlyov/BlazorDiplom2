@inject RoleManager<IdentityRole> _roleManager;
@inject UserManager<AspNetUsers> _userManager;

<h3>User</h3>

<div>
    @User.UserName
</div>
<div>
     <input type="checkbox" @onchange="ShowRoles"/>
</div>

@if(showRoles)
{
    @foreach(var role in identityAllRoles)
    {
        @if(identityUserRoles.Contains(role.Name))
        {
            <input type="checkbox" name="roles" value="@role.Name" checked="checked" />    
        }
        else
        {
            <input type="checkbox" name="roles" value="@role.Name" />
        }
              
        <div>@role.Name</div>
    }
}

@code {

    [Parameter] public AspNetUsers User { get; set; }

    private List<IdentityRole> identityAllRoles;

    private IList<string> identityUserRoles;

    private bool showRoles;

    private bool showData;

    protected override async Task OnInitializedAsync()
    {
        identityAllRoles = _roleManager.Roles.ToList();
        //identityUserRoles = await _userManager.GetRolesAsync(User);
    }

    
    private async Task ShowRoles()
    {
        
        identityUserRoles = await _userManager.GetRolesAsync(User);
        showRoles = !showRoles;
    }
    //protected override async Task OnInitializedAsync()
    //{
    //    identityAllRoles = _roleManager.Roles.ToList();
    //    identityUserRoles = await _userManager.GetRolesAsync(User);
    //}

    //[Parameter] public bool ShowRoles { get; set; }

    //[Parameter] public bool ShowData { get; set; }

}
