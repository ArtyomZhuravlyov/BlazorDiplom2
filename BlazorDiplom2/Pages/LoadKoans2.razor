@page "/loadkoans2"

@inject RoleManager<IdentityRole> _RoleManager;
@inject UserManager<AspNetUsers> _userManager;
@inject DB _db;
@using System.Net.Http;
@using System.Net.Http.Json;

@attribute [Authorize(Roles = "Teachers, Administrators")]
<h3>LoadKoans</h3>
 <h2>Выберите файл для загрузки</h2>
 @*   <form action="upload" method="post" enctype="multipart/form-data">
        <input type="file" name="uploads" /><br>
        <input type="submit" value="Загрузить" />
    </form>
*@


<EditForm Model="studentModelForm" OnSubmit="Submit">
    <InputFile OnChange="@LoadFiles" />
    @if (isLoading)
    {
       <p>Uploading...</p>
    }
    <button>Отправить</button>
</EditForm>

@code{

    private List<IBrowserFile> loadedFiles = new();
    private long maxFileSize = 1024 * 15;
    private int maxAllowedFiles = 1;
    private bool isLoading;
    StudentModelForm studentModelForm = new();

    private void Submit()
    {
        
    }

    private async Task LoadFiles(InputFileChangeEventArgs e)
    {
        isLoading = true;
        loadedFiles.Clear();

        foreach (var file in e.GetMultipleFiles(maxAllowedFiles))
        {
            try
            {
                loadedFiles.Add(file);

                var trustedFileNameForFileStorage = Path.GetRandomFileName();
                var path = $"{Directory.GetCurrentDirectory()}\\wwwroot\\Koans\\161142285.cs";

                await using FileStream fs = new(path, FileMode.Create);
                await file.OpenReadStream(maxFileSize).CopyToAsync(fs);
            }
            catch (Exception ex)
            {
                //Logger.LogError("File: {Filename} Error: {Error}", 
                //    file.Name, ex.Message);
            }
        }

        isLoading = false;
    }

}

